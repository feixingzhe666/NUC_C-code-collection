####2022/03/02笔记：
###计算机的存储器是由千千万万个电子线路元构成的，每个单元称为一个“位（bit）”
###字节(byte):大多数计算机都以8个位作为一个字节 1Byte = 8bit
###存储容量：1KB=2^10B    1MB=1024KB    1GB=1024MB    1TB=1024GB
###地址：字节在内存中某一位置的编号
###机器数：一个数及其符号在机器中的表示（二、八、十六进制表示）
###真值：机器数所代表的值（十进制表示）
###符号位：一个数的所占存储单元的最高位，用“0”表示正，用“1”表示负
###在计算机用一个数的最高位存放符号, 正数为0, 负数为1
##原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值.
#比如如果是8位二进制:
##[+1]原 = 0000 0001
##[-1]原 = 1000 0001
##第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:
##[1111 1111 , 0111 1111]==>[-127 , 127]
##反码的表示方法是:正数的反码是其本身,负数的反码是在其原码的基础上, 符号位不变，其余各个位取反
##[+1] = [00000001]原 = [00000001]反
##[-1] = [10000001]原 = [11111110]反
##补码的表示方法是:正数的补码就是其本身,负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (即在反码的基础上+1)
##[+1] = [00000001]原 = [00000001]反 = [00000001]补
##[-1] = [10000001]原 = [11111110]反 = [11111111]补
##为了解决原码减法的问题，于是，出现了反码。

